{
  "address": "0x4547918C363f5d6452b77c6233c70F31Ae41b613",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Migrator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "l1Addr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "l2Addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delegatedStake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fees",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IMigrator.MigrateDelegatorParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "MigrateDelegatorFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "l1Addr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "l2Addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IMigrator.MigrateSenderParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "MigrateSenderFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "l1Addr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "l2Addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "unbondingLockIds",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IMigrator.MigrateUnbondingLocksParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "MigrateUnbondingLocksFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "TxToL1",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "l1Addr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "l2Addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delegatedStake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fees",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            }
          ],
          "internalType": "struct IMigrator.MigrateDelegatorParams",
          "name": "_params",
          "type": "tuple"
        }
      ],
      "name": "finalizeMigrateDelegator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "l1Addr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "l2Addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve",
              "type": "uint256"
            }
          ],
          "internalType": "struct IMigrator.MigrateSenderParams",
          "name": "_params",
          "type": "tuple"
        }
      ],
      "name": "finalizeMigrateSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "l1Addr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "l2Addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "unbondingLockIds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct IMigrator.MigrateUnbondingLocksParams",
          "name": "_params",
          "type": "tuple"
        }
      ],
      "name": "finalizeMigrateUnbondingLocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Migrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Migrator",
          "type": "address"
        }
      ],
      "name": "setL1Migrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb1a978d15458d1abfbdd3442492bb1ebbee20a4664b040650e2aa7b322927cc1",
  "receipt": {
    "to": null,
    "from": "0xC96f6B72843Af1988C98F78eAB3E47673af63eA1",
    "contractAddress": "0x4547918C363f5d6452b77c6233c70F31Ae41b613",
    "transactionIndex": 0,
    "gasUsed": "25613575",
    "logsBloom": "0x
    "blockHash": "0xc01d99f24209d5dadcb3147e864e1725ac3d58e7789587c878c55d34f4024974",
    "transactionHash": "0xb1a978d15458d1abfbdd3442492bb1ebbee20a4664b040650e2aa7b322927cc1",
    "logs": [],
    "blockNumber": 7791773,
    "cumulativeGasUsed": "19313875",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000"
  ],
  "solcInputHash": "32fd9971ac458e296f813f74fd73c046",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Migrator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"l1Addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IMigrator.MigrateDelegatorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"MigrateDelegatorFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"l1Addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IMigrator.MigrateSenderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"MigrateSenderFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"l1Addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unbondingLockIds\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IMigrator.MigrateUnbondingLocksParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"MigrateUnbondingLocksFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"TxToL1\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"l1Addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"internalType\":\"struct IMigrator.MigrateDelegatorParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"finalizeMigrateDelegator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"l1Addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"internalType\":\"struct IMigrator.MigrateSenderParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"finalizeMigrateSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"l1Addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unbondingLockIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IMigrator.MigrateUnbondingLocksParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"finalizeMigrateUnbondingLocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Migrator\",\"type\":\"address\"}],\"name\":\"setL1Migrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L2/gateway/L2Migrator.sol\":\"L2Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/L2/gateway/L2ArbitrumMessenger.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IArbSys} from \\\"../../arbitrum/IArbSys.sol\\\";\\n\\nabstract contract L2ArbitrumMessenger {\\n    event TxToL1(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _id,\\n        bytes _data\\n    );\\n\\n    function sendTxToL1(\\n        address user,\\n        address to,\\n        bytes memory data\\n    ) internal returns (uint256) {\\n        // note: this method doesn't support sending ether to L1 together with a call\\n        uint256 id = IArbSys(address(100)).sendTxToL1(to, data);\\n        emit TxToL1(user, to, id, data);\\n        return id;\\n    }\\n\\n    modifier onlyL1Counterpart(address l1Counterpart) {\\n        require(\\n            msg.sender == applyL1ToL2Alias(l1Counterpart),\\n            \\\"ONLY_COUNTERPART_GATEWAY\\\"\\n        );\\n        _;\\n    }\\n\\n    uint160 internal constant OFFSET =\\n        uint160(0x1111000000000000000000000000000000001111);\\n\\n    // l1 addresses are transformed durng l1->l2 calls\\n    function applyL1ToL2Alias(address l1Address)\\n        internal\\n        pure\\n        returns (address l2Address)\\n    {\\n        l2Address = address(uint160(l1Address) + OFFSET);\\n    }\\n}\\n\",\"keccak256\":\"0x03edd83d95772f14bba5da9c2726caece1b06b15f0106bd58a929e4cbdcee5a1\",\"license\":\"MIT\"},\"contracts/L2/gateway/L2Migrator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {L2ArbitrumMessenger} from \\\"./L2ArbitrumMessenger.sol\\\";\\nimport {IMigrator} from \\\"../../interfaces/IMigrator.sol\\\";\\n\\ncontract L2Migrator is L2ArbitrumMessenger, IMigrator {\\n    address public l1Migrator;\\n\\n    event MigrateDelegatorFinalized(\\n        MigrateDelegatorParams params\\n    );\\n\\n    event MigrateUnbondingLocksFinalized(\\n        MigrateUnbondingLocksParams params\\n    );\\n\\n    event MigrateSenderFinalized(\\n        MigrateSenderParams params\\n    );\\n\\n    constructor(address _l1Migrator) {\\n        l1Migrator = _l1Migrator;\\n    }\\n\\n    // TODO: Add auth\\n    function setL1Migrator(address _l1Migrator) external {\\n        l1Migrator = _l1Migrator;\\n    }\\n\\n    function finalizeMigrateDelegator(MigrateDelegatorParams memory _params)\\n        external\\n        onlyL1Counterpart(l1Migrator)\\n    {\\n        // TODO: Fill logic\\n        emit MigrateDelegatorFinalized(_params);\\n    }\\n\\n    function finalizeMigrateUnbondingLocks(MigrateUnbondingLocksParams memory _params)\\n        external\\n        onlyL1Counterpart(l1Migrator)\\n    {\\n        // TODO: Fill logic\\n        emit MigrateUnbondingLocksFinalized(_params);\\n    }\\n\\n    function finalizeMigrateSender(MigrateSenderParams memory _params)\\n        external\\n        onlyL1Counterpart(l1Migrator)\\n    {\\n        // TODO: Fill logic\\n        emit MigrateSenderFinalized(_params);\\n    }\\n}\",\"keccak256\":\"0x65faaf8f861e6b46ea5587b19387e8a2108d3d54225c839ed3b32f58c486d295\",\"license\":\"MIT\"},\"contracts/arbitrum/IArbSys.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n\\n/*\\n * Copyright 2021, Offchain Labs, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064. Exposes a variety of system-level functionality.\\n */\\ninterface IArbSys {\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external pure returns (uint256);\\n\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty calldataForL1.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @param destination recipient address on L1\\n     * @param calldataForL1 (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata calldataForL1)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice get the number of transactions issued by the given external account or the account sequence number of the given contract\\n     * @param account target account\\n     * @return the number of transactions issued by the given external account or the account sequence number of the given contract\\n     */\\n    function getTransactionCount(address account)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice get the value of target L2 storage slot\\n     * This function is only callable from address 0 to prevent contracts from being able to call it\\n     * @param account target account\\n     * @param index target index of storage slot\\n     * @return stotage value for the given account at the given index\\n     */\\n    function getStorageAt(address account, uint256 index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice check if current call is coming from l1\\n     * @return true if the caller of this was called directly from L1\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    event EthWithdrawal(address indexed destAddr, uint256 amount);\\n\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n}\\n\",\"keccak256\":\"0x3d6319dff311534eee9cd66e2a577a3fa1ab34f9c7c5996bc4a3ecdd9101ebfb\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IMigrator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IMigrator {\\n    struct MigrateDelegatorParams {\\n        // Address that is migrating from L1\\n        address l1Addr;\\n        // Address to use on L2\\n        // If null, l1Addr is used on L2\\n        address l2Addr;\\n        // Stake of l1Addr on L1\\n        uint256 stake;\\n        // Delegated stake of l1Addr on L1\\n        uint256 delegatedStake;\\n        // Fees of l1Addr on L1\\n        uint256 fees;\\n        // Delegate of l1Addr on L1\\n        address delegate;\\n    }\\n\\n    struct MigrateUnbondingLocksParams {\\n        // Address that is migrating from L1\\n        address l1Addr;\\n        // Address to use on L2\\n        // If null, l1Addr is used on L2\\n        address l2Addr;\\n        // Total tokens in unbonding locks\\n        uint256 total;\\n        // IDs of unbonding locks being migrated\\n        uint256[] unbondingLockIds;\\n    }\\n\\n    struct MigrateSenderParams {\\n        // Address that is migrating from L1\\n        address l1Addr;\\n        // Address to use on L2\\n        // If null, l1Addr is used on L2\\n        address l2Addr;\\n        // Deposit of l1Addr on L1\\n        uint256 deposit;\\n        // Reserve of l1Addr on L1\\n        uint256 reserve;\\n    }\\n}\",\"keccak256\":\"0xf32fc9dc8abaa4e5005060d0dfcedba1d50df662e0c2b6b6cfa51879ed917292\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610cf0380380610cf08339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b610be28061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631a0725d81461005c5780637164394514610078578063a0965da514610094578063b3f5ccae146100b2578063b7608736146100ce575b600080fd5b61007660048036038101906100719190610675565b6100ea565b005b610092600480360381019061008d91906106c7565b6101bc565b005b61009c61028e565b6040516100a99190610901565b60405180910390f35b6100cc60048036038101906100c7919061069e565b6102b2565b005b6100e860048036038101906100e3919061064c565b610384565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610114816103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610181576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101789061091c565b60405180910390fd5b7fab2cb96eeb8726c709227935b01f6a5c6f7e9b518ab69eda0670c7ceda752d1a826040516101b0919061093c565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101e6816103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a9061091c565b60405180910390fd5b7f85f12f61931fbcf9db841313abf4cb808aca1d8d726c384c85dcd7060ced9b8a826040516102829190610972565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166102dc816103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610349576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103409061091c565b60405180910390fd5b7f71adb0cec7763a4cfefd893fc873369117ed172979f7b8f7b683f6a5787c52c0826040516103789190610957565b60405180910390a15050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000731111000000000000000000000000000000001111826103e99190610a2f565b9050919050565b60006104036103fe846109b9565b610994565b9050808382526020820190508285602086028201111561042257600080fd5b60005b8581101561045257816104388882610637565b845260208401935060208301925050600181019050610425565b5050509392505050565b60008135905061046b81610b7e565b92915050565b600082601f83011261048257600080fd5b81356104928482602086016103f0565b91505092915050565b600060c082840312156104ad57600080fd5b6104b760c0610994565b905060006104c78482850161045c565b60008301525060206104db8482850161045c565b60208301525060406104ef84828501610637565b604083015250606061050384828501610637565b606083015250608061051784828501610637565b60808301525060a061052b8482850161045c565b60a08301525092915050565b60006080828403121561054957600080fd5b6105536080610994565b905060006105638482850161045c565b60008301525060206105778482850161045c565b602083015250604061058b84828501610637565b604083015250606061059f84828501610637565b60608301525092915050565b6000608082840312156105bd57600080fd5b6105c76080610994565b905060006105d78482850161045c565b60008301525060206105eb8482850161045c565b60208301525060406105ff84828501610637565b604083015250606082013567ffffffffffffffff81111561061f57600080fd5b61062b84828501610471565b60608301525092915050565b60008135905061064681610b95565b92915050565b60006020828403121561065e57600080fd5b600061066c8482850161045c565b91505092915050565b600060c0828403121561068757600080fd5b60006106958482850161049b565b91505092915050565b6000608082840312156106b057600080fd5b60006106be84828501610537565b91505092915050565b6000602082840312156106d957600080fd5b600082013567ffffffffffffffff8111156106f357600080fd5b6106ff848285016105ab565b91505092915050565b600061071483836108f2565b60208301905092915050565b61072981610a79565b82525050565b61073881610a79565b82525050565b6000610749826109f5565b6107538185610a0d565b935061075e836109e5565b8060005b8381101561078f5781516107768882610708565b975061078183610a00565b925050600181019050610762565b5085935050505092915050565b60006107a9601883610a1e565b91506107b482610b55565b602082019050919050565b60c0820160008201516107d56000850182610720565b5060208201516107e86020850182610720565b5060408201516107fb60408501826108f2565b50606082015161080e60608501826108f2565b50608082015161082160808501826108f2565b5060a082015161083460a0850182610720565b50505050565b6080820160008201516108506000850182610720565b5060208201516108636020850182610720565b50604082015161087660408501826108f2565b50606082015161088960608501826108f2565b50505050565b60006080830160008301516108a76000860182610720565b5060208301516108ba6020860182610720565b5060408301516108cd60408601826108f2565b50606083015184820360608601526108e5828261073e565b9150508091505092915050565b6108fb81610aab565b82525050565b6000602082019050610916600083018461072f565b92915050565b600060208201905081810360008301526109358161079c565b9050919050565b600060c08201905061095160008301846107bf565b92915050565b600060808201905061096c600083018461083a565b92915050565b6000602082019050818103600083015261098c818461088f565b905092915050565b600061099e6109af565b90506109aa8282610ab5565b919050565b6000604051905090565b600067ffffffffffffffff8211156109d4576109d3610b15565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a3a82610a8b565b9150610a4583610a8b565b92508273ffffffffffffffffffffffffffffffffffffffff03821115610a6e57610a6d610ae6565b5b828201905092915050565b6000610a8482610a8b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610abe82610b44565b810181811067ffffffffffffffff82111715610add57610adc610b15565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f4e4c595f434f554e544552504152545f474154455741590000000000000000600082015250565b610b8781610a79565b8114610b9257600080fd5b50565b610b9e81610aab565b8114610ba957600080fd5b5056fea264697066735822122020e7fa2557653b3baee9962481b15effa733372f4b781ece3879d11a52be458a64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631a0725d81461005c5780637164394514610078578063a0965da514610094578063b3f5ccae146100b2578063b7608736146100ce575b600080fd5b61007660048036038101906100719190610675565b6100ea565b005b610092600480360381019061008d91906106c7565b6101bc565b005b61009c61028e565b6040516100a99190610901565b60405180910390f35b6100cc60048036038101906100c7919061069e565b6102b2565b005b6100e860048036038101906100e3919061064c565b610384565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610114816103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610181576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101789061091c565b60405180910390fd5b7fab2cb96eeb8726c709227935b01f6a5c6f7e9b518ab69eda0670c7ceda752d1a826040516101b0919061093c565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101e6816103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a9061091c565b60405180910390fd5b7f85f12f61931fbcf9db841313abf4cb808aca1d8d726c384c85dcd7060ced9b8a826040516102829190610972565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166102dc816103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610349576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103409061091c565b60405180910390fd5b7f71adb0cec7763a4cfefd893fc873369117ed172979f7b8f7b683f6a5787c52c0826040516103789190610957565b60405180910390a15050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000731111000000000000000000000000000000001111826103e99190610a2f565b9050919050565b60006104036103fe846109b9565b610994565b9050808382526020820190508285602086028201111561042257600080fd5b60005b8581101561045257816104388882610637565b845260208401935060208301925050600181019050610425565b5050509392505050565b60008135905061046b81610b7e565b92915050565b600082601f83011261048257600080fd5b81356104928482602086016103f0565b91505092915050565b600060c082840312156104ad57600080fd5b6104b760c0610994565b905060006104c78482850161045c565b60008301525060206104db8482850161045c565b60208301525060406104ef84828501610637565b604083015250606061050384828501610637565b606083015250608061051784828501610637565b60808301525060a061052b8482850161045c565b60a08301525092915050565b60006080828403121561054957600080fd5b6105536080610994565b905060006105638482850161045c565b60008301525060206105778482850161045c565b602083015250604061058b84828501610637565b604083015250606061059f84828501610637565b60608301525092915050565b6000608082840312156105bd57600080fd5b6105c76080610994565b905060006105d78482850161045c565b60008301525060206105eb8482850161045c565b60208301525060406105ff84828501610637565b604083015250606082013567ffffffffffffffff81111561061f57600080fd5b61062b84828501610471565b60608301525092915050565b60008135905061064681610b95565b92915050565b60006020828403121561065e57600080fd5b600061066c8482850161045c565b91505092915050565b600060c0828403121561068757600080fd5b60006106958482850161049b565b91505092915050565b6000608082840312156106b057600080fd5b60006106be84828501610537565b91505092915050565b6000602082840312156106d957600080fd5b600082013567ffffffffffffffff8111156106f357600080fd5b6106ff848285016105ab565b91505092915050565b600061071483836108f2565b60208301905092915050565b61072981610a79565b82525050565b61073881610a79565b82525050565b6000610749826109f5565b6107538185610a0d565b935061075e836109e5565b8060005b8381101561078f5781516107768882610708565b975061078183610a00565b925050600181019050610762565b5085935050505092915050565b60006107a9601883610a1e565b91506107b482610b55565b602082019050919050565b60c0820160008201516107d56000850182610720565b5060208201516107e86020850182610720565b5060408201516107fb60408501826108f2565b50606082015161080e60608501826108f2565b50608082015161082160808501826108f2565b5060a082015161083460a0850182610720565b50505050565b6080820160008201516108506000850182610720565b5060208201516108636020850182610720565b50604082015161087660408501826108f2565b50606082015161088960608501826108f2565b50505050565b60006080830160008301516108a76000860182610720565b5060208301516108ba6020860182610720565b5060408301516108cd60408601826108f2565b50606083015184820360608601526108e5828261073e565b9150508091505092915050565b6108fb81610aab565b82525050565b6000602082019050610916600083018461072f565b92915050565b600060208201905081810360008301526109358161079c565b9050919050565b600060c08201905061095160008301846107bf565b92915050565b600060808201905061096c600083018461083a565b92915050565b6000602082019050818103600083015261098c818461088f565b905092915050565b600061099e6109af565b90506109aa8282610ab5565b919050565b6000604051905090565b600067ffffffffffffffff8211156109d4576109d3610b15565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a3a82610a8b565b9150610a4583610a8b565b92508273ffffffffffffffffffffffffffffffffffffffff03821115610a6e57610a6d610ae6565b5b828201905092915050565b6000610a8482610a8b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610abe82610b44565b810181811067ffffffffffffffff82111715610add57610adc610b15565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f4e4c595f434f554e544552504152545f474154455741590000000000000000600082015250565b610b8781610a79565b8114610b9257600080fd5b50565b610b9e81610aab565b8114610ba957600080fd5b5056fea264697066735822122020e7fa2557653b3baee9962481b15effa733372f4b781ece3879d11a52be458a64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3923,
        "contract": "contracts/L2/gateway/L2Migrator.sol:L2Migrator",
        "label": "l1Migrator",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}