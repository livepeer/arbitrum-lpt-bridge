{
  "address": "0xD218f6eA99907C2EDB889A151DF326aCd0F70D88",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_inbox",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2LPTDataCacheAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seqNo",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "CacheTotalSupplyInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "seqNum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TxToL2",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasPriceBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSubmissionCost",
          "type": "uint256"
        }
      ],
      "name": "cacheTotalSupply",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCacheTotalSupplyData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inbox",
      "outputs": [
        {
          "internalType": "contract IInbox",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2LPTDataCacheAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcfe257be6bf926ab2db2091b0403aca6b4dac2dc91d7afa4501fc6229df004cd",
  "receipt": {
    "to": null,
    "from": "0xB5Af4138f0f33be0D6414Eb25271B9C2Dc245fb5",
    "contractAddress": "0xD218f6eA99907C2EDB889A151DF326aCd0F70D88",
    "transactionIndex": 17,
    "gasUsed": "495140",
    "logsBloom": "0x
    "blockHash": "0xa0fe92c082e154fef4abd0fa1558fd7eb1b7a1a4973c0f522db0d4246f804345",
    "transactionHash": "0xcfe257be6bf926ab2db2091b0403aca6b4dac2dc91d7afa4501fc6229df004cd",
    "logs": [],
    "blockNumber": 10049241,
    "cumulativeGasUsed": "7771708",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x578BAde599406A8fE3d24Fd7f7211c0911F5B29e",
    "0xEf5F154eb0261CB0331a28BC0fB60CA73E716617",
    "0xd348394B6Fa2F698eC6A26352390663047735388"
  ],
  "solcInputHash": "c034c4c5135c3eaa2b471cbf69fd1f2b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_inbox\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2LPTDataCacheAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seqNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"CacheTotalSupplyInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"seqNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TxToL2\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasPriceBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSubmissionCost\",\"type\":\"uint256\"}],\"name\":\"cacheTotalSupply\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCacheTotalSupplyData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inbox\",\"outputs\":[{\"internalType\":\"contract IInbox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2LPTDataCacheAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cacheTotalSupply(uint256,uint256,uint256)\":{\"params\":{\"_gasPriceBid\":\"Gas price bid for L2 execution\",\"_maxGas\":\"Gas limit for L2 execution\",\"_maxSubmissionCost\":\"Max ETH to pay for retryable ticket base submission fee\"}},\"getCacheTotalSupplyData()\":{\"returns\":{\"data\":\"L2 calldata for L2LPTDataCache\",\"totalSupply\":\"L1 LPT total supply\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cacheTotalSupply(uint256,uint256,uint256)\":{\"notice\":\"Executes a L2 call to cache L1 LPT total supply in L2LPTDataCache\"},\"getCacheTotalSupplyData()\":{\"notice\":\"Return L2 calldata and total supply to use for a L2 call on L2LPTDataCache\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1/gateway/L1LPTDataCache.sol\":\"L1LPTDataCache\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/L1/gateway/L1ArbitrumMessenger.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IBridge} from \\\"../../arbitrum/IBridge.sol\\\";\\nimport {IInbox} from \\\"../../arbitrum/IInbox.sol\\\";\\nimport {IOutbox} from \\\"../../arbitrum/IOutbox.sol\\\";\\n\\nabstract contract L1ArbitrumMessenger {\\n    IInbox public immutable inbox;\\n\\n    event TxToL2(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed seqNum,\\n        bytes data\\n    );\\n\\n    constructor(address _inbox) {\\n        inbox = IInbox(_inbox);\\n    }\\n\\n    modifier onlyL2Counterpart(address l2Counterpart) {\\n        // a message coming from the counterpart gateway was executed by the bridge\\n        address bridge = inbox.bridge();\\n        require(msg.sender == bridge, \\\"NOT_FROM_BRIDGE\\\");\\n\\n        // and the outbox reports that the L2 address of the sender is the counterpart gateway\\n        address l2ToL1Sender = IOutbox(IBridge(bridge).activeOutbox())\\n            .l2ToL1Sender();\\n        require(l2ToL1Sender == l2Counterpart, \\\"ONLY_COUNTERPART_GATEWAY\\\");\\n        _;\\n    }\\n\\n    function sendTxToL2(\\n        address target,\\n        address from,\\n        uint256 maxSubmissionCost,\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        bytes memory data\\n    ) internal returns (uint256) {\\n        return\\n            sendTxToL2(\\n                target,\\n                from,\\n                msg.value,\\n                0, // we always assume that l2CallValue = 0\\n                maxSubmissionCost,\\n                maxGas,\\n                gasPriceBid,\\n                data\\n            );\\n    }\\n\\n    function sendTxToL2(\\n        address target,\\n        address from,\\n        uint256 _l1CallValue,\\n        uint256 _l2CallValue,\\n        uint256 maxSubmissionCost,\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        bytes memory data\\n    ) internal returns (uint256) {\\n        uint256 seqNum = inbox.createRetryableTicket{value: _l1CallValue}(\\n            target,\\n            _l2CallValue,\\n            maxSubmissionCost,\\n            from,\\n            from,\\n            maxGas,\\n            gasPriceBid,\\n            data\\n        );\\n        emit TxToL2(from, target, seqNum, data);\\n        return seqNum;\\n    }\\n}\\n\",\"keccak256\":\"0x45aa92adba58ff5ce26765cdd383295aad3085241d2c0bf925f622043ebecbd6\",\"license\":\"MIT\"},\"contracts/L1/gateway/L1LPTDataCache.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {L1ArbitrumMessenger} from \\\"./L1ArbitrumMessenger.sol\\\";\\n\\ninterface TotalSupplyLike {\\n    function totalSupply() external view returns (uint256);\\n}\\n\\ninterface IL2LPTDataCache {\\n    function finalizeCacheTotalSupply(uint256 _totalSupply) external;\\n}\\n\\ncontract L1LPTDataCache is L1ArbitrumMessenger {\\n    address public immutable tokenAddr;\\n    address public immutable l2LPTDataCacheAddr;\\n\\n    event CacheTotalSupplyInitiated(uint256 seqNo, uint256 totalSupply);\\n\\n    constructor(\\n        address _inbox,\\n        address _tokenAddr,\\n        address _l2LPTDataCacheAddr\\n    ) L1ArbitrumMessenger(_inbox) {\\n        tokenAddr = _tokenAddr;\\n        l2LPTDataCacheAddr = _l2LPTDataCacheAddr;\\n    }\\n\\n    /**\\n     * @notice Executes a L2 call to cache L1 LPT total supply in L2LPTDataCache\\n     * @param _maxGas Gas limit for L2 execution\\n     * @param _gasPriceBid Gas price bid for L2 execution\\n     * @param _maxSubmissionCost Max ETH to pay for retryable ticket base submission fee\\n     */\\n    function cacheTotalSupply(\\n        uint256 _maxGas,\\n        uint256 _gasPriceBid,\\n        uint256 _maxSubmissionCost\\n    ) external payable {\\n        (bytes memory data, uint256 totalSupply) = getCacheTotalSupplyData();\\n\\n        uint256 seqNo = sendTxToL2(\\n            l2LPTDataCacheAddr,\\n            msg.sender, // Refund to caller\\n            _maxSubmissionCost,\\n            _maxGas,\\n            _gasPriceBid,\\n            data\\n        );\\n\\n        emit CacheTotalSupplyInitiated(seqNo, totalSupply);\\n    }\\n\\n    /**\\n     * @notice Return L2 calldata and total supply to use for a L2 call on L2LPTDataCache\\n     * @return data L2 calldata for L2LPTDataCache\\n     * @return totalSupply L1 LPT total supply\\n     */\\n    function getCacheTotalSupplyData()\\n        public\\n        view\\n        returns (bytes memory data, uint256 totalSupply)\\n    {\\n        totalSupply = TotalSupplyLike(tokenAddr).totalSupply();\\n\\n        data = abi.encodeWithSelector(\\n            IL2LPTDataCache.finalizeCacheTotalSupply.selector,\\n            totalSupply\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x39bfc8bdf21a1a2a788dbda3ee23a2aadd24bff202fc0ba6af6a614170db2f3f\",\"license\":\"MIT\"},\"contracts/arbitrum/IBridge.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n\\n/*\\n * Copyright 2021, Offchain Labs, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IBridge {\\n    event MessageDelivered(\\n        uint256 indexed messageIndex,\\n        bytes32 indexed beforeInboxAcc,\\n        address inbox,\\n        uint8 kind,\\n        address sender,\\n        bytes32 messageDataHash\\n    );\\n\\n    event BridgeCallTriggered(\\n        address indexed outbox,\\n        address indexed destAddr,\\n        uint256 amount,\\n        bytes data\\n    );\\n\\n    event InboxToggle(address indexed inbox, bool enabled);\\n\\n    event OutboxToggle(address indexed outbox, bool enabled);\\n\\n    function deliverMessageToInbox(\\n        uint8 kind,\\n        address sender,\\n        bytes32 messageDataHash\\n    ) external payable returns (uint256);\\n\\n    function executeCall(\\n        address destAddr,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory returnData);\\n\\n    // These are only callable by the admin\\n    function setInbox(address inbox, bool enabled) external;\\n\\n    function setOutbox(address inbox, bool enabled) external;\\n\\n    // View functions\\n\\n    function activeOutbox() external view returns (address);\\n\\n    function allowedInboxes(address inbox) external view returns (bool);\\n\\n    function allowedOutboxes(address outbox) external view returns (bool);\\n\\n    function inboxAccs(uint256 index) external view returns (bytes32);\\n\\n    function messageCount() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x074790dd28b5e4702a50d11a6659de3d72a0e45c868fce801e94eeb5e225770f\",\"license\":\"Apache-2.0\"},\"contracts/arbitrum/IInbox.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n\\n/*\\n * Copyright 2021, Offchain Labs, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IMessageProvider.sol\\\";\\n\\ninterface IInbox is IMessageProvider {\\n    function sendL2Message(bytes calldata messageData)\\n        external\\n        returns (uint256);\\n\\n    function sendUnsignedTransaction(\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        uint256 nonce,\\n        address destAddr,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (uint256);\\n\\n    function sendContractTransaction(\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        address destAddr,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (uint256);\\n\\n    function sendL1FundedUnsignedTransaction(\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        uint256 nonce,\\n        address destAddr,\\n        bytes calldata data\\n    ) external payable returns (uint256);\\n\\n    function sendL1FundedContractTransaction(\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        address destAddr,\\n        bytes calldata data\\n    ) external payable returns (uint256);\\n\\n    function createRetryableTicket(\\n        address destAddr,\\n        uint256 arbTxCallValue,\\n        uint256 maxSubmissionCost,\\n        address submissionRefundAddress,\\n        address valueRefundAddress,\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        bytes calldata data\\n    ) external payable returns (uint256);\\n\\n    function createRetryableTicketNoRefundAliasRewrite(\\n        address destAddr,\\n        uint256 arbTxCallValue,\\n        uint256 maxSubmissionCost,\\n        address submissionRefundAddress,\\n        address valueRefundAddress,\\n        uint256 maxGas,\\n        uint256 gasPriceBid,\\n        bytes calldata data\\n    ) external payable returns (uint256);\\n\\n    function depositEth(uint256 maxSubmissionCost)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    function bridge() external view returns (address);\\n\\n    function pauseCreateRetryables() external;\\n\\n    function unpauseCreateRetryables() external;\\n\\n    function startRewriteAddress() external;\\n\\n    function stopRewriteAddress() external;\\n}\\n\",\"keccak256\":\"0x12f048f1f8cb2c80576e474237e82c86e78de1c7c290f5ac5478e10df1501f74\",\"license\":\"Apache-2.0\"},\"contracts/arbitrum/IMessageProvider.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n\\n/*\\n * Copyright 2021, Offchain Labs, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IMessageProvider {\\n    event InboxMessageDelivered(uint256 indexed messageNum, bytes data);\\n\\n    event InboxMessageDeliveredFromOrigin(uint256 indexed messageNum);\\n}\\n\",\"keccak256\":\"0x415dddb95232da1302a97721281c362f0003046ad227c6eea998702dd0c2c8fd\",\"license\":\"Apache-2.0\"},\"contracts/arbitrum/IOutbox.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n\\n/*\\n * Copyright 2021, Offchain Labs, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IOutbox {\\n    event OutboxEntryCreated(\\n        uint256 indexed batchNum,\\n        uint256 outboxEntryIndex,\\n        bytes32 outputRoot,\\n        uint256 numInBatch\\n    );\\n    event OutBoxTransactionExecuted(\\n        address indexed destAddr,\\n        address indexed l2Sender,\\n        uint256 indexed outboxEntryIndex,\\n        uint256 transactionIndex\\n    );\\n\\n    function l2ToL1Sender() external view returns (address);\\n\\n    function l2ToL1Block() external view returns (uint256);\\n\\n    function l2ToL1EthBlock() external view returns (uint256);\\n\\n    function l2ToL1Timestamp() external view returns (uint256);\\n\\n    function l2ToL1BatchNum() external view returns (uint256);\\n\\n    function l2ToL1OutputId() external view returns (bytes32);\\n\\n    function processOutgoingMessages(\\n        bytes calldata sendsData,\\n        uint256[] calldata sendLengths\\n    ) external;\\n\\n    function outboxEntryExists(uint256 batchNum) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xb6a18a8da62224137abd565e56d3aac1331ee6634c0cbd06e05738d5e18fd53a\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b506040516109bb3803806109bb833981810160405281019061003291906100f6565b828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505061018e565b6000815190506100f081610177565b92915050565b60008060006060848603121561010b57600080fd5b6000610119868287016100e1565b935050602061012a868287016100e1565b925050604061013b868287016100e1565b9150509250925092565b600061015082610157565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61018081610145565b811461018b57600080fd5b50565b60805160601c60a05160601c60c05160601c6107e06101db6000396000818161012e01526101c001526000818161019c01526101e8015260008181610304015261034a01526107e06000f3fe60806040526004361061004a5760003560e01c80632adfd9991461004f5780635fbe4d1d1461006b57806376540da614610096578063c7fce66f146100c1578063fb0e722b146100ed575b600080fd5b610069600480360381019061006491906104cd565b610118565b005b34801561007757600080fd5b5061008061019a565b60405161008d9190610582565b60405180910390f35b3480156100a257600080fd5b506100ab6101be565b6040516100b89190610582565b60405180910390f35b3480156100cd57600080fd5b506100d66101e2565b6040516100e4929190610644565b60405180910390f35b3480156100f957600080fd5b50610102610302565b60405161010f9190610674565b60405180910390f35b6000806101236101e2565b9150915060006101577f00000000000000000000000000000000000000000000000000000000000000003386898988610326565b90507fc592f6a24d7ed60d007a73d985d899c2de29e7b1820003d666188f9b20951d2d818360405161018a9291906106aa565b60405180910390a1505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561024c57600080fd5b505afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906104a4565b905063ae3a23e060e01b8160405160240161029f919061068f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505091509091565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610339878734600089898989610345565b90509695505050505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663679b6ded898c8a8a8e8f8c8c8c6040518a63ffffffff1660e01b81526004016103b098979695949392919061059d565b6020604051808303818588803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061040291906104a4565b9050808a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fc1d1490cf25c3b40d600dfb27c7680340ed1ab901b7e8f3551280968a3b372b0866040516104629190610622565b60405180910390a48091505098975050505050505050565b60008135905061048981610793565b92915050565b60008151905061049e81610793565b92915050565b6000602082840312156104b657600080fd5b60006104c48482850161048f565b91505092915050565b6000806000606084860312156104e257600080fd5b60006104f08682870161047a565b93505060206105018682870161047a565b92505060406105128682870161047a565b9150509250925092565b610525816106ef565b82525050565b6000610536826106d3565b61054081856106de565b935061055081856020860161074f565b61055981610782565b840191505092915050565b61056d8161072b565b82525050565b61057c81610721565b82525050565b6000602082019050610597600083018461051c565b92915050565b6000610100820190506105b3600083018b61051c565b6105c0602083018a610573565b6105cd6040830189610573565b6105da606083018861051c565b6105e7608083018761051c565b6105f460a0830186610573565b61060160c0830185610573565b81810360e0830152610613818461052b565b90509998505050505050505050565b6000602082019050818103600083015261063c818461052b565b905092915050565b6000604082019050818103600083015261065e818561052b565b905061066d6020830184610573565b9392505050565b60006020820190506106896000830184610564565b92915050565b60006020820190506106a46000830184610573565b92915050565b60006040820190506106bf6000830185610573565b6106cc6020830184610573565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006106fa82610701565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107368261073d565b9050919050565b600061074882610701565b9050919050565b60005b8381101561076d578082015181840152602081019050610752565b8381111561077c576000848401525b50505050565b6000601f19601f8301169050919050565b61079c81610721565b81146107a757600080fd5b5056fea2646970667358221220ea404373f2d5b2e945eabfcbb0169241f1d8bbfdfda8ef80c43155423b96e47d64736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80632adfd9991461004f5780635fbe4d1d1461006b57806376540da614610096578063c7fce66f146100c1578063fb0e722b146100ed575b600080fd5b610069600480360381019061006491906104cd565b610118565b005b34801561007757600080fd5b5061008061019a565b60405161008d9190610582565b60405180910390f35b3480156100a257600080fd5b506100ab6101be565b6040516100b89190610582565b60405180910390f35b3480156100cd57600080fd5b506100d66101e2565b6040516100e4929190610644565b60405180910390f35b3480156100f957600080fd5b50610102610302565b60405161010f9190610674565b60405180910390f35b6000806101236101e2565b9150915060006101577f00000000000000000000000000000000000000000000000000000000000000003386898988610326565b90507fc592f6a24d7ed60d007a73d985d899c2de29e7b1820003d666188f9b20951d2d818360405161018a9291906106aa565b60405180910390a1505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561024c57600080fd5b505afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906104a4565b905063ae3a23e060e01b8160405160240161029f919061068f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505091509091565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610339878734600089898989610345565b90509695505050505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663679b6ded898c8a8a8e8f8c8c8c6040518a63ffffffff1660e01b81526004016103b098979695949392919061059d565b6020604051808303818588803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061040291906104a4565b9050808a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fc1d1490cf25c3b40d600dfb27c7680340ed1ab901b7e8f3551280968a3b372b0866040516104629190610622565b60405180910390a48091505098975050505050505050565b60008135905061048981610793565b92915050565b60008151905061049e81610793565b92915050565b6000602082840312156104b657600080fd5b60006104c48482850161048f565b91505092915050565b6000806000606084860312156104e257600080fd5b60006104f08682870161047a565b93505060206105018682870161047a565b92505060406105128682870161047a565b9150509250925092565b610525816106ef565b82525050565b6000610536826106d3565b61054081856106de565b935061055081856020860161074f565b61055981610782565b840191505092915050565b61056d8161072b565b82525050565b61057c81610721565b82525050565b6000602082019050610597600083018461051c565b92915050565b6000610100820190506105b3600083018b61051c565b6105c0602083018a610573565b6105cd6040830189610573565b6105da606083018861051c565b6105e7608083018761051c565b6105f460a0830186610573565b61060160c0830185610573565b81810360e0830152610613818461052b565b90509998505050505050505050565b6000602082019050818103600083015261063c818461052b565b905092915050565b6000604082019050818103600083015261065e818561052b565b905061066d6020830184610573565b9392505050565b60006020820190506106896000830184610564565b92915050565b60006020820190506106a46000830184610573565b92915050565b60006040820190506106bf6000830185610573565b6106cc6020830184610573565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006106fa82610701565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107368261073d565b9050919050565b600061074882610701565b9050919050565b60005b8381101561076d578082015181840152602081019050610752565b8381111561077c576000848401525b50505050565b6000601f19601f8301169050919050565b61079c81610721565b81146107a757600080fd5b5056fea2646970667358221220ea404373f2d5b2e945eabfcbb0169241f1d8bbfdfda8ef80c43155423b96e47d64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cacheTotalSupply(uint256,uint256,uint256)": {
        "params": {
          "_gasPriceBid": "Gas price bid for L2 execution",
          "_maxGas": "Gas limit for L2 execution",
          "_maxSubmissionCost": "Max ETH to pay for retryable ticket base submission fee"
        }
      },
      "getCacheTotalSupplyData()": {
        "returns": {
          "data": "L2 calldata for L2LPTDataCache",
          "totalSupply": "L1 LPT total supply"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cacheTotalSupply(uint256,uint256,uint256)": {
        "notice": "Executes a L2 call to cache L1 LPT total supply in L2LPTDataCache"
      },
      "getCacheTotalSupplyData()": {
        "notice": "Return L2 calldata and total supply to use for a L2 call on L2LPTDataCache"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}